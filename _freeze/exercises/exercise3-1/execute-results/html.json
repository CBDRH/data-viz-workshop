{
  "hash": "01a1b1764ecdac6e440af512a8a75bfa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Getting started\"\nformat: \n  html:\n    execute:\n      echo: true\n      eval: false \n---\n\n\n\n# Aims\n\nIn this exercise you will use `ggplot2` and other tools to transform your tidy data frame to an attractive chart. You will geoms as the basic building blocks, Essentially, we will use code to go...\n\n\n:::: {.column-page}\n\n::: {layout-ncol=2}\n\n**this tidy dataframe!**\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-602b5549af320d6118cc\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-602b5549af320d6118cc\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\"],[\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\",\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\",\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\",\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\",\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\",\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\",\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\",\"Poor\",\"Fair\",\"Good\",\"Very good\",\"Excellent\"],[\"Australian Capital Territory\",\"Australian Capital Territory\",\"Australian Capital Territory\",\"Australian Capital Territory\",\"Australian Capital Territory\",\"New South Wales\",\"New South Wales\",\"New South Wales\",\"New South Wales\",\"New South Wales\",\"Northern Territory\",\"Northern Territory\",\"Northern Territory\",\"Northern Territory\",\"Northern Territory\",\"Queensland\",\"Queensland\",\"Queensland\",\"Queensland\",\"Queensland\",\"South Australia\",\"South Australia\",\"South Australia\",\"South Australia\",\"South Australia\",\"Tasmania\",\"Tasmania\",\"Tasmania\",\"Tasmania\",\"Tasmania\",\"Victoria\",\"Victoria\",\"Victoria\",\"Victoria\",\"Victoria\",\"Western Australia\",\"Western Australia\",\"Western Australia\",\"Western Australia\",\"Western Australia\"],[3.4,8.699999999999999,26.9,41.9,19.2,3.5,10.6,29.3,34.7,21.9,2.9,9.699999999999999,31.6,33.1,22.4,3.7,12.6,28.2,37.7,17.8,3.3,12.6,28,35.5,20.4,5.1,12.2,29.8,34.4,18.7,3,8.9,26,38.8,22.7,3,9.300000000000001,31.4,36.2,20.4]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>status<\\/th>\\n      <th>state<\\/th>\\n      <th>percent<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":7,\"searching\":false,\"lengthChange\":false,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"status\",\"targets\":1},{\"name\":\"state\",\"targets\":2},{\"name\":\"percent\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n**To this nice chart** \n\n![](../images/self-assessed-health.png)\n\n\n:::\n\n:::: \n\n\n# How to complete this exercise\n\nThis first data visualisation exercise is fully guided---just follow the steps and copy-paste the code snippets into your own code file to build up the visualisation code. \n\nNote that some steps are incremental, for example Step 6 provides code to filter data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter to these rows\ndf1Clean <- df1Raw |>\n  filter(X %in% healthStatus)\n```\n:::\n\n\nIn the next step, Step 7, you are given code to select certain variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Append this line to the previous code using |>\nselect(c(X, ends_with(\".1\"), -'Australia.1'))\n```\n:::\n\n\nBut note the comment:\n\n> Append this line to the previous code using |>\n\nThis means that you should append the code in Step 7 to the previous code in Step 6 using the `|>` operator to connect the two. So after you complete Step 7 the code in your file will look like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter to these rows\ndf1Clean <- df1Raw |>\n  filter(X %in% healthStatus) |> \n  select(c(X, ends_with(\".1\"), -'Australia.1'))\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}