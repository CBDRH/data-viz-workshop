{
  "hash": "39b2d1811d8b55ca3ad13c4b2f629447",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualising data with `ggplot2`\"\nauthor: \"Mark Hanly\"\nformat: \n  revealjs:\n    theme: [night, custom.scss]\n    highlight-style: monokai\nfooter: '<a href=\"/lectures/lectures.qmd\">Back</a>'\n---\n\n\n## Something motivational\n\n\n<!-- ##  {background-iframe=\"https://www.data-to-viz.com/\"} -->\n\n## \n\n![](../images/from-data-to-vis.png)\n\n##\n\n::: {.center-xy}\n![](../images/horst/ggplot2-data-masterpiece.png)\n:::\n\n::: {.figLab}\n[Artwork by @allison_horst](https://twitter.com/allison_horst)\n:::\n\n## `ggplot2`\n\n:::: {.columns}\n\n::: {.column .incremental width=60%}\n\n* A grammar of graphics\n\n* Consistent syntax \n\n* Flexible\n\n* Customisable\n\n* [ggplot2.tidyverse.org](https://ggplot2.tidyverse.org/)\n\n* [exts.ggplot2.tidyverse.org/gallery](https://exts.ggplot2.tidyverse.org/gallery/)\n\n\n:::\n\n\n::: {.column width=40%}\n![](../images/ggplot2.png)\n:::\n\n::::\n\n\n## Components of a `ggplot` \n\n::: {.incremental}\n\n* Data (`data = `)\n\n* Coordinate system (`x` and `y`)\n \n* Aesthetics (`aes()`)\n\n* Geometries (`geom_*`)\n\n:::\n\n## `ggplot2` components: Data\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins\n)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` components: Coordinates\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)\n)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` components: Geom\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)\n) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` components: Aesthetics\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)\n) + \n  geom_histogram(\n    color = 'navy',\n    fill = 'lightblue'\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## `ggplot2` A note on style {.smaller}\n\n\n:::: {.columns}\n\n::: {.column}\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)\n) + \n  geom_histogram(\n    color = 'navy',\n    fill = 'lightblue'\n  )\n```\n:::\n\n:::\n\n::: {.column .incremental}\n\n* `library()` calls on top\n* Plenty of `# Comments`\n* Spacing `x = body_mass_g`\n* Indentation\n* `data = ` and (`aes()`) on separate lines\n* Geoms on new lines\n* `color` and `fill` on new lines\n\n:::\n\n::::\n\n. . . \n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=penguins,aes(x=body_mass_g))+geom_histogram(color='navy',fill='lightblue')\n```\n:::\n\n\nDoes the same but harder to read and debug!\n\n\n\n## \n\n::: {.callout-tip icon=false}\n\n## {{< fa rocket >}} Mini Exercise\n\n::: {.clock}\n\n{{< fa clock >}} 5 minutes\n\n:::\n\n#### Practice with ggplot2!\n\nModify the code on the left to produce the figure on the right!\n<br>\n\n:::: {.columns}\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(ggplot2)\nlibrary(palmerpenguins)\n\n# Call ggplot\nggplot(\n  data = penguins,\n  aes(x = body_mass_g)\n) + \n  geom_histogram(\n    color = 'navy',\n    fill = 'lightblue'\n  )\n```\n:::\n\n\n:::\n\n::: {.column}\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n:::\n\n::::\n\n::: {style=\"font-size:0.7em;\"}\n\n**Hints**\n\n* This is a _density_ plot\n* Enter `?geom_density()` at the console to open the R Documentation. Scroll down to the section on **Aesthetics** to read about other modifiable aesthetics.\n\n:::\n\n:::\n\n\n# Adding aesthetic mappings\n\n## Two numeric\n\n### Scatterplot\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Plot\nggplot(\n  data = penguins,\n  aes(x = flipper_length_mm, \n      y = bill_length_mm)\n) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n## One numeric, One categorical\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Plot\nggplot(\n  data = penguins,\n  aes(x = island, \n      y = body_mass_g)\n) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n\n## Aesthetic mappings\n\nMap variables to visual elements\n\n::: {.incremental}\n\n* Colour\n* Fill\n* Shape\n* Size\n* Line type\n\n:::\n\n## Map flipper length to x position and bill length to y position\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(x = flipper_length_mm, \n      y = bill_length_mm)\n) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n## Map flipper length to colour\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = flipper_length_mm, \n    y = bill_length_mm,\n    color = flipper_length_mm)\n) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## Map flipper length to size\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = flipper_length_mm, \n    y = bill_length_mm,\n    size = flipper_length_mm)\n) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## Map species to colour\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = flipper_length_mm, \n    y = bill_length_mm,\n    color = species)\n) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n## Map species to colour and shape\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Scatterplot\nggplot(\n  data = penguins,\n  aes(\n    x = flipper_length_mm, \n    y = bill_length_mm,\n    color = species,\n    shape = species)\n) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n## \n\n::: {.callout-tip icon=false}\n\n## {{< fa rocket >}} Mini Exercise\n\n::: {.clock}\n\n{{< fa clock >}} 5 minutes\n\n:::\n\n#### Practice with ggplot2!\n\nModify the code on the left to produce the figure on the right!\n<br>\n\n:::: {.columns}\n\n::: {.column}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot\nggplot(\n  data = penguins,\n  aes(x = island, \n      y = body_mass_g)\n) + \n  geom_boxplot()\n```\n:::\n\n\n\n:::\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\n::: {style=\"font-size:0.7em;\"}\n\n**Hints**\n\n* \n\n:::\n\n:::\n\n\n# Building more complex plots\n\n## Data prep\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 Ã— 3\n# Groups:   year [3]\n   year species   count\n  <int> <fct>     <int>\n1  2007 Adelie       50\n2  2007 Chinstrap    26\n3  2007 Gentoo       34\n4  2008 Adelie       50\n5  2008 Chinstrap    18\n6  2008 Gentoo       46\n7  2009 Adelie       52\n8  2009 Chinstrap    24\n9  2009 Gentoo       44\n```\n\n\n:::\n:::\n\n\n## Plot as a scatterplot \n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"1-9|1-3|4\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count)\n  ) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n## Adding another layer \n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-9|9\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count)\n  ) +\n  geom_point() + \n  geom_line()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n## Adding `group` \n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|7\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count,\n        group = species)\n  ) +\n  geom_point() + \n  geom_line()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n## Layering geoms\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|8,12\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count,\n        group = species,\n        label = count)\n  ) +\n  geom_point() + \n  geom_line() + \n  geom_text()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n## Layering geoms\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|12\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count,\n        group = species,\n        label = count)\n  ) +\n  geom_point() + \n  geom_line() + \n  geom_text(nudge_y = 2)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n## Global mapping Vs local mapping\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|9\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count,\n        group = species,\n        label = count,\n        color = species)\n  ) +\n  geom_point() + \n  geom_line() + \n  geom_text(nudge_y = 2)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n## Global mapping Vs local mapping\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|11-13\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count,\n        group = species,\n        label = count)\n  ) +\n  geom_point() + \n  geom_line(\n    aes(color = species)\n  ) + \n  geom_text(nudge_y = 2)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n## Geom-specific properties\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|10-12,16-18\"}\npenguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count,\n        group = species,\n        label = count)\n  ) +\n  geom_point(\n    size = 3\n  ) + \n  geom_line(\n    aes(color = species)\n  ) + \n  geom_text(\n    nudge_y = 2,\n    color = \"grey40\")\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n## Scales\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|1\"}\np <- penguins |> \n  group_by(year, species) |> \n  summarise(count = n()) |> \n  ggplot(\n    aes(x = year, \n        y = count,\n        group = species,\n        label = count)\n  ) +\n  geom_point(\n    size = 3\n  ) + \n  geom_line(\n    aes(color = species)\n  ) + \n  geom_text(\n    nudge_y = 2,\n    color = \"grey40\")\n\np\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n## Scales\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|1\"}\np\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n\n## Scales: x-axis\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|2-4,3,4\"}\np + \n  scale_x_continuous(\n    \"Year\",\n    breaks = 2007:2009)\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n\n. . . \n\n<br>\n\nTry entering `2007:2009` at the console!\n\n\n## Scales: y-axis\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|5-7,6,7\"}\np + \n  scale_x_continuous(\n    \"Year\",\n    breaks = 2007:2009)  + \n  scale_y_continuous(\n    \"Count\",\n    limits = c(0,75))\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n\n## Scales: y-axis\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|8\"}\np + \n  scale_x_continuous(\n    \"Year\",\n    breaks = 2007:2009)  + \n  scale_y_continuous(\n    \"Count\",\n    limits = c(0,75),\n    breaks = seq(0, 75, 25))\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n. . . \n\n<br>\n\nTry entering `seq(0, 75, 25)` at the console!\n\n\n## Axis scales {.smaller}\n\nWe chose `scale_x_continuous()` and `scale_y_continuous()` because these are the natural scales for **year** and **count** which are numeric variables.\n\n<br>\n\nThere are many other axis scales available for plotting different types of variables.\n\n::: {.incremental}\n\n* `scale_*_continuous()`\n* `scale_*discrete()`\n* `scale_*_binned()`\n* `scale_*_log10()`\n* `scale_*_date()`\n* `scale_*_datetime()`\n\n:::\n\n## Scales: Colour\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|9-14,10,11-13\"}\np + \n  scale_x_continuous(\n    \"Year\",\n    breaks = 2007:2009)  + \n  scale_y_continuous(\n    \"Count\",\n    limits = c(0,75),\n    breaks = seq(0, 75, 25)) + \n  scale_color_manual(\n    NULL,\n    values = c('red',\n               'orange',\n               'blue')\n  )\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n\n## Scales: Colour\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|14-18\"}\np + \n  scale_x_continuous(\n    \"Year\",\n    breaks = 2007:2009)  + \n  scale_y_continuous(\n    \"Count\",\n    limits = c(0,75),\n    breaks = seq(0, 75, 25)) + \n  scale_color_manual(\n    NULL,\n    values = c('red',\n               'orange',\n               'blue'),\n    label = c(\n      'Gentoo' = 'Fast Swimmer',\n      'Adelie' = 'Ice Dweller',\n      'Chinstrap' = 'Rock Climber')\n    )\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-33-1.png){width=960}\n:::\n:::\n\n\n\n## Scales: Colour\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"1-20|9-11\"}\np + \n  scale_x_continuous(\n    \"Year\",\n    breaks = 2007:2009)  + \n  scale_y_continuous(\n    \"Count\",\n    limits = c(0,75),\n    breaks = seq(0, 75, 25)) + \n  scale_color_brewer(\n    type = \"qual\",\n    palette = \"set1\")\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n\n## Scales: Colour\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\ndisplay.brewer.all()\n```\n\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-35-1.png){width=960}\n:::\n:::\n\n\n## \n\n::::: {.callout-tip icon=false}\n\n## {{< fa rocket >}} Mini Exercise\n\n::: {.clock}\n\n{{< fa clock >}} 20 minutes\n\n:::\n\n#### Practice with ggplot2!\n\n\n:::: {.columns}\n\n::: {.column}\n\n::: {.panel-tabset}\n\n### Goal\n\nCan you use `ggplot2` and the `penguins` data to produce the figure on the right? \n\n### Hints\n\n::: {.smaller}\n\n* Start by identifying the `x`, `y` and `fill` aesthetics that will go in to `aes()`.\n* This plot combines `geom_jitter()` and `geom_boxplot()`\n* Setting the `alpha =` argument makes the boxplots transparent\n* Use `scale_fill_manual()` to control the fill colors for the three different species\n\n:::\n\n### {{< fa skull-crossbones >}} Seriously, help\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fill in the blanks!\nggplot(\n  data = ,\n  aes(x = ,\n      y = ,\n      fill = )) +\n  geom_jitter(shape = ) +\n  geom_boxplot(\n    alpha = ) + \n  scale_y_continuous(\n    \" \",\n    limits = c( ,  )) + \n  scale_x_discrete(NULL) + \n  scale_fill_manual(NULL,\n    values = c(' ',' ',' '))\n```\n:::\n\n\n:::\n\n:::\n\n::: {.column}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lecture-data-vis_files/figure-revealjs/unnamed-chunk-37-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\n:::::\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}