---
format: 
  revealjs:
    theme: [night, ../custom.scss]
    highlight-style: monokai
footer: '<a href="/lectures/overview.qmd">{{< fa house >}}</a>'
slide-number: c/t
---

## Literate programming with `Rmarkdown` {.title-slide}


<img src="../images/rmarkdown.png"></img>

## {.center-slide}

![[Artwork by @allison_horst](https://twitter.com/allison_horst)](../images/horst/rmarkdown-band.png)


## Examples

See [rmarkdown.rstudio.com/gallery](https://rmarkdown.rstudio.com/gallery.html)

## {background-iframe="https://rstudio.github.io/tufte/?_gl=1*tp3wgz*_ga*MTAzMDI4ODU3LjE3MzEyMDYwNTE.*_ga_2C0WZ1JHG0*MTczMTIxMzk1Ni4yLjEuMTczMTIxMzk2My4wLjAuMA.."}




## Rmarkdown `.Rmd` file {.smaller}


:::: {.columns}

::: {.column width=66%}

```{markdown}
#| echo: true
#| eval: false
#| code-line-numbers: "1-22|1-5|10-12,17-19|7-8,14|1-22"

    ---
    title: "Cars analysis"
    output: html_document
    date: "2024-11-10"
    ---
      
    ## Introduction
    Here are the first few lines of the `cars` dataset:

    ```{r cars}
    summary(cars)
    ```

    There are `r nrow(cars)` in total. You can also embed plots, for example:

    ```{r scatterplot, echo=FALSE}
    plot(cars)
    ```
```

:::

::: {.column width=34%}

### Contents
1. YAML header
1. R code chunks
1. Formatted text

:::

::::


## Output

![cars-analysis.html](../images/cars-analysis-html.png)


## Mini-Exercise {.smaller}

::: {.clock}

{{< fa clock >}} 3 minutes

:::

### Create and run a new Rmarkdown file

:::: {.columns}

::: {.column width=34%}

<iframe style="width:100%;max-width:360px;height:360px;" src="https://stopwatch-app.com/widget/timer?theme=dark&color=yellow&hrs=0&min=3&sec=0" frameborder="0"></iframe>

:::

::: {.column width=66%}

1. In RStudio, open a new file by clicking ![](../images/new-file.png)

1. Select ![](../images/new-rmd-file.png) R Markdown...

1. Enter a **Title** and **Author** then click OK 

1. Click ![](../images/knit-button.png) to knit the file (you will be prompted to save the file---save it in your Exercises folder)

1. Examine the rendered output

:::

::::



## Under the hood

![[Rmarkdown Cookbook](https://bookdown.org/yihui/rmarkdown-cookbook/)](../images/rmarkdown-how-it-works.png)


## Output

![cars-analysis.docx](../images/cars-analysis-word.png)

## Output

![cars-analysis.pdf](../images/cars-analysis-html.png)


## Text formatting {.smaller}

:::: {.columns}
::: {.column}
### Rmarkdown syntax
:::
::: {.column}
### Output
:::
::::

. . . 

:::: {.columns}
::: {.column}
\*italic\* or \_italic\_
:::
::: {.column}
*italic*
:::
::::

. . . 

:::: {.columns}
::: {.column}
\*\*bold\*\* or \_\_bold\_\_
:::
::: {.column}
**bold**
:::
::::

. . . 

:::: {.columns}
::: {.column}
superscript\^2\^
:::
::: {.column}
superscript^2^
:::
::::

. . . 

:::: {.columns}
::: {.column}
subscript\~2\~
:::
::: {.column}
subscript~2~
:::
::::

. . . 

:::: {.columns}
::: {.column}
\# Level 1 header
:::
::: {.column}
<span style = "font-size: 1.2em; font-weight: 600">Level 1 header</span>
:::
::::

. . . 

:::: {.columns}
::: {.column}
\#\# Level 2 header
:::
::: {.column}
<span style = "font-size: 1.1em; font-weight: 600">Level 2 header</span>
:::
::::

. . . 

:::: {.columns}
::: {.column}
\#\#\# Level 3 header
:::
::: {.column}
<span style = "font-size: 1.0em; font-weight: 600">Level 3 header</span>
:::
::::

. . . 

:::: {.columns}
::: {.column}
\>Stand out quote
:::
::: {.column}
>Stand out quote
:::
::::

## Lists {.smaller}

:::: {.columns}
::: {.column}
### Rmarkdown syntax
:::
::: {.column}
### Output
:::
::::

. . . 

:::: {.columns}
::: {.column}
\* Bullet

\* Point

\* list
:::
::: {.column}
* Bullet
* Point
* list
:::
::::

. . . 

<br>

:::: {.columns}
::: {.column}
1\. Numbered

1\. List

1\. Items
:::
::: {.column}
1. Numbered
1. List
1. Items
:::
::::


## Links and images {.smaller}

:::: {.columns}
::: {.column}
### Rmarkdown syntax
:::
::: {.column}
### Output
:::
::::

. . . 

:::: {.columns}
::: {.column}
\[click here\]\(http://google.com\)
:::
::: {.column}
[click here](http://google.com)
:::
::::

. . . 

<br>

:::: {.columns}
::: {.column}
\!\[cars-analysis.html\]\(../images/cars-analysis-html.png\)
:::
::: {.column}
![cars-analysis.html](../images/cars-analysis-html.png)
:::
::::


## Mini-Exercise {.smaller}

::: {.clock}

{{< fa clock >}} 5 minutes

:::

### Practice text formatting

Edit the file `exercises/5-rmarkdown/poem-exercise.Rmd` to generate the output on the right

:::: {.columns}

::: {.column width=34%}

<iframe style="width:100%;max-width:360px;height:360px;" src="https://stopwatch-app.com/widget/timer?theme=dark&color=yellow&hrs=0&min=5&sec=0" frameborder="0"></iframe>

:::

::: {.column width=66%}

![](../images/clancy-target-output.png)

:::

::::


## YAML Header {.smaller}

### Yet Another Markdown Language

```{markdown}
#| echo: true
#| eval: false

    ---
    title: "Cars analysis"
    output: html_document
    date: "2024-11-10"
    ---
```    

<br>

::: {.incremental}

* Controls whole-document settings

* key-value pairs

* `output: html_document`

* `output: word_document`

* `output: pdf_document`

:::

<br>


## YAML Nested Keys

:::: {.columns}

::: {.column width=45%}

```{markdown}
#| echo: true
#| eval: false

    output: 
      html_document:
        toc: true
        toc_float: true
        code_folding: hide
        theme: united

```

:::

::: {.column width=55%}
   
![](../images/rmarkdown-yaml-example.png)

:::

::::


## Inline R code

* Insert values of R objects inline in text
* Useful for quick calculations

```{markdown}
#| echo: true
#| eval: false

    Average speed was `r mean(cars$speed)`mph.
```

Average speed was `r mean(cars$speed)`mph.



## Code chunks {.smaller}

```{markdown}
#| echo: true
#| eval: false

    ```{r scatterplot, echo=FALSE}
    
    plot(cars)
    
    ```
```

<br>

::: {.incremental}

* Click ![](../images/embed.png) to add
* Starts and ends with triple backticks ` ``` `
* `{r}` indicates the language is R
* `{r scatterplot}` indicates the chuck name is **scatterplot** (not essential by useful for readability and troubleshooting)
* `echo=FALSE` a chunk option meaning don't print the code to the output
::: 


## Chunk options {.smaller}

:::: {.columns}

::: {.column width=34%}
### Option
:::

::: {.column width=66%}
### Meaning
:::

::::

. . . 

:::: {.columns}

::: {.column width=34%}
`echo=FALSE`
:::

::: {.column width=66%}
Show code in output document (TRUE/FALSE)
:::

::::

. . . 

:::: {.columns}

::: {.column width=34%}
`eval=FALSE`
:::

::: {.column width=66%}
Run code in the chunk (TRUE/FALSE)
:::

::::

. . . 

:::: {.columns}

::: {.column width=34%}
`include=FALSE`
:::

::: {.column width=66%}
Include code in the chunk (TRUE/FALSE)
:::

::::

. . . 

:::: {.columns}

::: {.column width=34%}
`message=FALSE`
:::

::: {.column width=66%}
Display code messages in document (TRUE/FALSE)
:::

::::

. . . 

:::: {.columns}

::: {.column width=34%}
`warning=FALSE`
:::

::: {.column width=66%}
Display code warnings in document (TRUE/FALSE)
:::

::::

. . . 

:::: {.columns}

::: {.column width=34%}
`fig.width=7`
:::

::: {.column width=66%}
Figure width in inches
:::

::::

. . . 

:::: {.columns}

::: {.column width=34%}
`fig.height=7`
:::

::: {.column width=66%}
Figure height in inches
:::

::::

## Global options

Use `knitr::opts_chunk$set()` to set global options

```{markdown}
#| echo: true
#| eval: false

    ```{r, setup, include=FALSE}
    knitr::opts_chunk$set(
      echo = FALSE, fig.width = 5, fig.height = 7
    )
    ```
```  

. . . 

<br>

::: {.incremental}

* Has to go inside an R code chunk
* Individual code chunks can have different settings

:::


## Parameters 

>Parameterised reports allow you to reuse a report template across multiple similar scenarios

::: {.incremental}

* Generate reports for a specific time period

* Generate the same report for different Local Health Districts

* Repeat your whole analysis using a different definition of your exposure variable

:::


## Parameters example 

:::: {.columns}

::: {.column width=50%}

```{markdown}
#| echo: true
#| eval: false
#| code-line-numbers: "1-22|4-6|5,9|6,11-13"

    ---
    title: "Parameters Example"
    output: html_document
    params: 
      date: "November 22nd 2024"
      dataset: !r cars
    ---

    The date is `r params$date`

    ```{r}
    head(params$dataset)
    ```

```

:::

::: {.column width=50%}

![](../images/parameters-example.png)

:::

::::

. . . 

* Note `dataset: !r cars` defines the parameter 'dataset' to be an R object, rather than the string **"cars"**

## Workflow and tips {.smaller}

::: {.incremental}

* Write in your `.Rmd` file but regularly click ![](../images/knit-button.png) knit and preview your file

* Use global code chunk options to suppress code and warnings that you don't want the reader to see (`echo=FALSE`, `warning=FALSE` etc)

* Separate code to generate figures into separate `.R` files then read into `.Rmd` using `![](my-chart.png)` syntax

:::


## Mini-Exercise {.smaller}

::: {.clock}

{{< fa clock >}} 15 minutes

:::

### Update a parameterised R Markdown Powerpoint slide deck

:::: {.columns}

::: {.column width=34%}

<iframe style="width:100%;max-width:360px;height:360px;" src="https://stopwatch-app.com/widget/timer?theme=dark&color=yellow&hrs=0&min=15&sec=0" frameborder="0"></iframe>

:::

::: {.column width=66%}

1. Open the file `my-presentation.Rmd` in the folder `Exercises/5-rmarkdown`

1. Edit the YAML header to generate a powerpoint output instead of HTML (see [here](https://bookdown.org/yihui/rmarkdown/output-formats.html#output-formats) for a list of output format names)

1. Add an additional slide showing the figure on self assessed health

1. Update the `date` parameter to print the latest set of figures. 

:::

::::
