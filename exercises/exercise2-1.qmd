---
title: "Getting started"
format: html
---

# The End Goal

Let's start with the goal in mind! Here it is---a multiple line chart showing the estimated proportion of the population experiencing a range of chronic conditions between 2001 and 2020.

![](../images/chronic-conditions-2001-2022.png)
The simple chart format is enhanced using techniques covered in this workshop.

* **Colour** There are 12 chronic conditions presented on the chart presents---if each line was a separate colour it would be visually overwhelming and difficult to distinguish. Instead, most lines are grey, with two conditions hihglighted: Mental Health in <span style="color: #BC2C1A;">Red</span> and Allergies in <span style="color: #377771;">Green</span>.
* **Text hierarchy** The main chart title is an informative title highlighting the key message. A descriptive subtitle explains in more detail what is plotted in the chart while the data source is provided in the footnote. 
* **Annotation** Text annotations at the end of each line are used to help distinguish the chronic conditions. 
* **Story telling** Highlighting just two series helps to tell a story about the conditions that are growing more prevalent. Echoing the line colors in the informative title for <span style="color: #BC2C1A; font-weight: 600;">Mental health</span> and <span style="color: #377771; font-weight: 600;">Allergies</span> help to reinforce this narrative.

# The data

The data for this plot come from the National Health Survey (NHS) 2022, a face-to-face interview survey conducted by the Australian Bureau of Statistics (ABS) and designed to collect information on health behaviours, conditions prevalence, and risk factors in Australia. You can read more about the survey on the ABS website [here](https://www.abs.gov.au/statistics/health/health-conditions-and-risks/national-health-survey/latest-release).

These data are openly available for download in `.xlsx` format from the [ABS website](https://www.abs.gov.au/statistics/health/health-conditions-and-risks/national-health-survey/2022/NHSDC01.xlsx) and a copy is also included in the workshop repo in the file `national-health-survey-2022-table-1.xlsx`.    


# Aims

In this exercise you will use `dplyr` and other tools to read-in and clean the self-assessed health data from the National Health Survey. The raw data is the `.xlsx` file downloaded from the ABS data. The final output will be a tidy data file in `.csv` and `.Rda` format. Essentially, we will use code to go...


:::: {.column-page}

::: {layout-ncol=2}

**From this messy excel sheet...**

**To this tidy dataframe!** 

![](../images/figure2-raw-data-screenshot.png)

```{r}
#| echo: false
#| eval: true
load("../3-clean-data/vis2.Rda")
DT::datatable(df2Clean,
              options = list(pageLength = 7, 
                             searching = FALSE,
                             lengthChange = FALSE))
```

:::

:::: 

::: {.callout-tip}

## Tidy data 

Remember, in a tidy dataset:

1. Each variable is a column; each column is a variable.
1. Each observation is a row; each row is an observation.
1. Each value is a cell; each cell is a single value.

If you examine the output above you will see this is true for the clean data: there are three columns, and each column is a variable: status, state, and percent. Each row is an observation, telling us the per cent for every state and status combination. Finally, each cell is a single value---there are no merged cells. 

None of these rules of tidy datasets hold for the original `.xlsx` file!

[R for Data Science (2nd Edition)](https://r4ds.hadley.nz/data-tidy.html)

:::



# How to complete this exercise

While the first data building exercises was fully guided, here you are challenged to start coding by yourself. Many of the steps are similar to the previous exercise so refer back to the step-by-step guide from [Exercise 1](exercise1-2.html) to help you on your way. 

Some hints are provided if you do get stuck. They are hover-able links that look like this: @hint-demo (try hovering your cursor to get a hint!).

:::: {style="display: none;"}

::: {#hint-demo}

>There once was a coder who'd try,<br>
>To solve R code with a watchful eye.<br>
>But hints were their game,<br>
>(“Oh, learning’s so lame!”)<br>
>“Why think when the answers comply?”

:::

::::